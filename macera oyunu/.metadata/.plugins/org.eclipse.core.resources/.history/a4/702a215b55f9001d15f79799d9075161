package location.BattleLoc;

import java.util.Scanner;

import monster.Monster;
import monster.Zombie;
import player.Inventory;
import player.Player;

public class Cave extends BattleLoc{
	
	Monster zombie;
	
	
	public Cave() {}
	
	public Cave(Player player, Monster zombie) {
		super(player, zombie);
		this.zombie = zombie;
		zombie.setDamage(zombie.getDamage()-getPlayer().getDefence());
		if(zombie.getDamage()<0) {
			zombie.setDamage(0);
		}
	}

	
	public void selectLocation() {
		
	}
	
	
	
	Scanner scanner = new Scanner(System.in);
	
	public void moneyEarnedFromZombies(int mN) throws Exception {
		int counter = 0;
		for(int i=0; i<mN; i++) {
			zombie.setHealthy(10);
			combat(zombie);
			System.out.println(" ZOMBÄ° Ã–LDÃœ !");
			counter ++;
		}
		System.out.println(counter + " adet zombiden kazandÄ±ÄŸÄ±n para: " + (zombie.getMoney()*counter));
		getPlayer().setMoney((getPlayer().getMoney()+zombie.getMoney()*counter));
		System.out.println("ðŸ’² Mevcut paran: " + getPlayer().getMoney());
	}
	
	
	int mN = zombie.monsterNumber();
	@Override
	public void onLocation() throws Exception {
		
		
		System.out.println();
		System.out.println("Dikkatli ol! MaÄŸarada birden fazla zombi olabilir");
		System.out.println("Zombilerin Ã¼stesinden gelebilirsen maÄŸaradan yemek kazanarak Ã§Ä±kacaÄŸÄ±nÄ± unutma");
		System.out.println("Fakat zombilerin Ã¼stesinden gelemezsen Ã¶lÃ¼rsÃ¼n ðŸ’€");
		scanner.nextLine();

		if(mN == 1) {
			System.out.println("MaÄŸarada " + mN + " adet zombi gÃ¶rÃ¼nÃ¼yor. " + mN +" tane zombiyle savaÅŸabilecek misin yoksa kaÃ§acak mÄ±sÄ±n ?");
			System.out.println("SavaÅŸmak istiyorsan s'ye bas, kaÃ§mak istiyorsan k'ye bas");
			String savasYADAkac = scanner.nextLine();
			
			switch (savasYADAkac) {
			case "s": {
				
				moneyEarnedFromZombies(mN);
				this.isFood();
				
				break;
			}
			case "k": {
				selectLocation();
				break;
			}
			default:
				onLocation();
				//throw new Exception("YanlÄ±ÅŸ seÃ§im");
			}
			
		}
		else if (mN == 2) {
			System.out.println("MaÄŸarada " + mN + " adet zombi gÃ¶rÃ¼nÃ¼yor. " + mN +" tane zombiyle savaÅŸabilecek misin yoksa kaÃ§acak mÄ±sÄ±n ?");
			System.out.println("SavaÅŸmak istiyorsan s'ye bas, kaÃ§mak istiyorsan k'ye bas");
			String savasYADAkac = scanner.nextLine();
			
			switch (savasYADAkac) {
			case "s": {
				zombie.setHealthy(10);
				combat(zombie);
				System.out.println(" 1. zombi Ã¶ldÃ¼, sÄ±ra 2. zombiyi Ã¶ldÃ¼rmekte. Bol ÅŸans :)");
				scanner.nextLine();
				zombie.setHealthy(10);
				combat(zombie);
				
				this.isFood();
		
				
				
				break;
			}
			case "k": {
				selectLocation();
				break;
			}
			default:
				throw new Exception("YanlÄ±ÅŸ seÃ§im");
			}
		}
		else if(mN == 3){
			System.out.println("MaÄŸarada " + mN + " adet zombi gÃ¶rÃ¼nÃ¼yor. " + mN +" tane zombiyle savaÅŸabilecek misin yoksa kaÃ§acak mÄ±sÄ±n ?");
			System.out.println("SavaÅŸmak istiyorsan s'ye bas, kaÃ§mak istiyorsan k'ye bas");
			String savasYADAkac = scanner.nextLine();
			
			switch (savasYADAkac) {
			case "s": {
				zombie.setHealthy(10);
				combat(zombie);
				System.out.println(" 1. zombi Ã¶ldÃ¼, sÄ±ra 2. zombiyi Ã¶ldÃ¼rmekte. Bol ÅŸans :)");
				scanner.nextLine();
				zombie.setHealthy(10);
				combat(zombie);
				System.out.println(" Ä°ÅŸte bu ! 2. zombiyi de Ã¶ldÃ¼rdÃ¼n. Hadi bu sonuncu :)");
				scanner.nextLine();
				zombie.setHealthy(10);
				combat(zombie);
				this.isFood();
				
				
				break;
			}
			case "k": {
				selectLocation();
				break;
			}
			default:
				throw new Exception("YanlÄ±ÅŸ seÃ§im");
			}
		}
	}

	
	public void isFood() {
		if(getPlayer().getHealthy()>0) {
			System.out.println(", karÅŸÄ±na Ã§Ä±kan tÃ¼m zombileri Ã¶ldÃ¼rdÃ¼n ve yemek kazandÄ±n !");
			Inventory inventory = new Inventory();
			getPlayer().setInventory(inventory);
			getPlayer().getInventory().setFood(true);
		}
//		else {
//			getPlayer().getInventory().setFood(false);
//		}
	}
	
	
	/*
	@Override
	public void combat() throws Exception {
		System.out.println();
		System.out.println("Zombinin mevcut canÄ±: " + zombie.getHealthy());
		System.out.println("Senin mevcut canÄ±n: " + getPlayer().getHealthy());
		scanner.nextLine();

		while (zombie.getHealthy()>0&&getPlayer().getHealthy()>0) {
			System.out.print("SaldÄ±rÄ± sÄ±rasÄ± sende   >>>>>>>>>>");
			zombie.setHealthy(zombie.getHealthy()-getPlayer().getDamage());
			if(zombie.getHealthy()<=0) {
				System.out.print(" Zombinin kalan canÄ±: 0");
				System.out.println("   ----------   Senin kalan canÄ±n: " + getPlayer().getHealthy());
				scanner.nextLine();
			}else {
				System.out.print(" Zombinin kalan canÄ±: " + zombie.getHealthy());
				System.out.println("   ----------   Senin kalan canÄ±n: " + getPlayer().getHealthy());
				scanner.nextLine();
			}
			
			if(zombie.getHealthy()<=0) {
				System.out.print("TEBRÄ°KLER");
				break;
			}
			
			System.out.print("SaldÄ±rÄ± sÄ±rasÄ± zombide <<<<<<<<<<");
			System.out.print(" Zombinin kalan canÄ±: " + zombie.getHealthy());
			getPlayer().setHealthy(getPlayer().getHealthy()-zombie.getDamage());
			System.out.println("   ----------   Senin kalan canÄ±n: " + getPlayer().getHealthy());
			scanner.nextLine();
			
			if (getPlayer().getHealthy()<=0) {
				System.out.println("!!!!!!!!!!!!!!!!     ðŸ’€    Ã–LDÃœNÃœZ     ðŸ’€    !!!!!!!!!!!!!!!!");
				throw new Exception("Ã–LDÃœNÃœZ. OYUN BÄ°TTÄ°");
			}
		}	
	}
	*/
	
	
	

}




